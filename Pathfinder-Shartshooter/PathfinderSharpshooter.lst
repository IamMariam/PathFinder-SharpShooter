;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 5/26/2024 7:41:43 PM
;----------------------------------------------

;Address Opcode 	ASM
0x0000	0x28C1      	GOTO       193
_interrupt:
0x0004	0x00FF      	MOVWF      R15
0x0005	0x0E03      	SWAPF      STATUS, 0
0x0006	0x0183      	CLRF       STATUS
0x0007	0x00A9      	MOVWF      ___saveSTATUS
0x0008	0x080A      	MOVF       PCLATH, 0
0x0009	0x00AA      	MOVWF      ___savePCLATH
0x000A	0x018A      	CLRF       PCLATH
0x000B	0x0870      	MOVF       R0, 0
0x000C	0x00A0      	MOVWF      32
;PathfinderSharpshooter.c,143 :: 		void interrupt(void)
;PathfinderSharpshooter.c,146 :: 		if(INTCON & 0x02 )
0x000D	0x1C8B      	BTFSS      INTCON, 1
0x000E	0x2813      	GOTO       L_interrupt22
;PathfinderSharpshooter.c,149 :: 		serial = ~serial;
0x000F	0x09A1      	COMF       _serial, 1
;PathfinderSharpshooter.c,150 :: 		INTCON = INTCON & 0xFD; //1111 1101
0x0010	0x30FD      	MOVLW      253
0x0011	0x058B      	ANDWF      INTCON, 1
;PathfinderSharpshooter.c,152 :: 		}
0x0012	0x2818      	GOTO       L_interrupt23
L_interrupt22:
;PathfinderSharpshooter.c,155 :: 		else if(INTCON & 0x04) // every 1ms
0x0013	0x1D0B      	BTFSS      INTCON, 2
0x0014	0x2818      	GOTO       L_interrupt24
;PathfinderSharpshooter.c,157 :: 		TMR0 = 248;//to make sure TMR0 will overflow after 8 counts==1ms
0x0015	0x30F8      	MOVLW      248
0x0016	0x0081      	MOVWF      TMR0
;PathfinderSharpshooter.c,158 :: 		tick++;
0x0017	0x0AA7      	INCF       _tick, 1
;PathfinderSharpshooter.c,159 :: 		}
L_interrupt24:
L_interrupt23:
;PathfinderSharpshooter.c,160 :: 		INTCON = INTCON & 0xFB;// clear T0IF
0x0018	0x30FB      	MOVLW      251
0x0019	0x058B      	ANDWF      INTCON, 1
;PathfinderSharpshooter.c,163 :: 		}
L_end_interrupt:
L__interrupt31:
0x001A	0x0820      	MOVF       32, 0
0x001B	0x00F0      	MOVWF      R0
0x001C	0x082A      	MOVF       ___savePCLATH, 0
0x001D	0x008A      	MOVWF      PCLATH
0x001E	0x0E29      	SWAPF      ___saveSTATUS, 0
0x001F	0x0083      	MOVWF      STATUS
0x0020	0x0EFF      	SWAPF      R15, 1
0x0021	0x0E7F      	SWAPF      R15, 0
0x0022	0x0009      	RETFIE
; end of _interrupt
_mymsDelay:
;PathfinderSharpshooter.c,211 :: 		void mymsDelay(unsigned int ms){
;PathfinderSharpshooter.c,213 :: 		tick=0;
0x0023	0x1283      	BCF        STATUS, 5
0x0024	0x1303      	BCF        STATUS, 6
0x0025	0x01A7      	CLRF       _tick
;PathfinderSharpshooter.c,214 :: 		while(tick<ms);
L_mymsDelay25:
0x0026	0x0830      	MOVF       FARG_mymsDelay_ms+1, 0
0x0027	0x3C00      	SUBLW      0
0x0028	0x1D03      	BTFSS      STATUS, 2
0x0029	0x282C      	GOTO       L__mymsDelay40
0x002A	0x082F      	MOVF       FARG_mymsDelay_ms, 0
0x002B	0x0227      	SUBWF      _tick, 0
L__mymsDelay40:
0x002C	0x1803      	BTFSC      STATUS, 0
0x002D	0x282F      	GOTO       L_mymsDelay26
0x002E	0x2826      	GOTO       L_mymsDelay25
L_mymsDelay26:
;PathfinderSharpshooter.c,216 :: 		}
L_end_mymsDelay:
0x002F	0x0008      	RETURN
; end of _mymsDelay
_UART1_Init:
;__Lib_UART_c67.c,2 :: 		
;__Lib_UART_c67.c,5 :: 		
0x0030	0x1683      	BSF        STATUS, 5
0x0031	0x1303      	BCF        STATUS, 6
0x0032	0x1698      	BSF        TXSTA, 5
;__Lib_UART_c67.c,6 :: 		
0x0033	0x3090      	MOVLW      144
0x0034	0x1283      	BCF        STATUS, 5
0x0035	0x0098      	MOVWF      RCSTA
;__Lib_UART_c67.c,7 :: 		
0x0036	0x1683      	BSF        STATUS, 5
0x0037	0x1787      	BSF        TRISC7_bit, BitPos(TRISC7_bit+0)
;__Lib_UART_c67.c,8 :: 		
0x0038	0x1307      	BCF        TRISC6_bit, BitPos(TRISC6_bit+0)
;__Lib_UART_c67.c,10 :: 		
L_UART1_Init0:
0x0039	0x1283      	BCF        STATUS, 5
0x003A	0x1E8C      	BTFSS      PIR1, 5
0x003B	0x283F      	GOTO       L_UART1_Init1
;__Lib_UART_c67.c,11 :: 		
0x003C	0x081A      	MOVF       RCREG, 0
0x003D	0x00F0      	MOVWF      R0
0x003E	0x2839      	GOTO       L_UART1_Init0
L_UART1_Init1:
;__Lib_UART_c67.c,12 :: 		
L_end_UART1_Init:
0x003F	0x0008      	RETURN
; end of _UART1_Init
_ATD_init:
;PathfinderSharpshooter.c,242 :: 		void ATD_init(void)
;PathfinderSharpshooter.c,244 :: 		ADCON0 = 0x49; //0100 1001 ARD on , Dont GO channel 1 Fosc/16
0x0040	0x3049      	MOVLW      73
0x0041	0x1283      	BCF        STATUS, 5
0x0042	0x1303      	BCF        STATUS, 6
0x0043	0x009F      	MOVWF      ADCON0
;PathfinderSharpshooter.c,245 :: 		ADCON1 = 0xC0; // All channels are Analog, 500 KHz, right justified
0x0044	0x30C0      	MOVLW      192
0x0045	0x1683      	BSF        STATUS, 5
0x0046	0x009F      	MOVWF      ADCON1
;PathfinderSharpshooter.c,246 :: 		TRISA = TRISA | 0x02; //PORTA1 input (sharp IR)
0x0047	0x1485      	BSF        TRISA, 1
;PathfinderSharpshooter.c,248 :: 		}
L_end_ATD_init:
0x0048	0x0008      	RETURN
; end of _ATD_init
_PWM_Init:
;PathfinderSharpshooter.c,165 :: 		void PWM_Init() {
;PathfinderSharpshooter.c,166 :: 		PR2 = 250;
0x0049	0x30FA      	MOVLW      250
0x004A	0x1683      	BSF        STATUS, 5
0x004B	0x1303      	BCF        STATUS, 6
0x004C	0x0092      	MOVWF      PR2
;PathfinderSharpshooter.c,167 :: 		CCP1CON = 0b00001100;
0x004D	0x300C      	MOVLW      12
0x004E	0x1283      	BCF        STATUS, 5
0x004F	0x0097      	MOVWF      CCP1CON
;PathfinderSharpshooter.c,168 :: 		CCP2CON = 0b00001100;
0x0050	0x300C      	MOVLW      12
0x0051	0x009D      	MOVWF      CCP2CON
;PathfinderSharpshooter.c,169 :: 		CCPR1L = 0;
0x0052	0x0195      	CLRF       CCPR1L
;PathfinderSharpshooter.c,170 :: 		CCPR2L = 0;
0x0053	0x019B      	CLRF       CCPR2L
;PathfinderSharpshooter.c,171 :: 		TMR2 = 0;
0x0054	0x0191      	CLRF       TMR2
;PathfinderSharpshooter.c,172 :: 		T2CON = 0b00000110;
0x0055	0x3006      	MOVLW      6
0x0056	0x0092      	MOVWF      T2CON
;PathfinderSharpshooter.c,173 :: 		}
L_end_PWM_Init:
0x0057	0x0008      	RETURN
; end of _PWM_Init
_moveLeft:
;PathfinderSharpshooter.c,199 :: 		void moveLeft(unsigned int speed1, unsigned int speed2) {
;PathfinderSharpshooter.c,200 :: 		CCPR1L = speed1;
0x0058	0x1283      	BCF        STATUS, 5
0x0059	0x1303      	BCF        STATUS, 6
0x005A	0x082B      	MOVF       FARG_moveLeft_speed1, 0
0x005B	0x0095      	MOVWF      CCPR1L
;PathfinderSharpshooter.c,201 :: 		CCPR2L = speed2;
0x005C	0x082D      	MOVF       FARG_moveLeft_speed2, 0
0x005D	0x009B      	MOVWF      CCPR2L
;PathfinderSharpshooter.c,202 :: 		PORTD = 0b00000110;
0x005E	0x3006      	MOVLW      6
0x005F	0x0088      	MOVWF      PORTD
;PathfinderSharpshooter.c,203 :: 		}
L_end_moveLeft:
0x0060	0x0008      	RETURN
; end of _moveLeft
_UART1_Read:
;__Lib_UART_c67.c,21 :: 		
;__Lib_UART_c67.c,24 :: 		
0x0061	0x1283      	BCF        STATUS, 5
0x0062	0x1303      	BCF        STATUS, 6
0x0063	0x081A      	MOVF       RCREG, 0
0x0064	0x00F1      	MOVWF      R1
;__Lib_UART_c67.c,25 :: 		
0x0065	0x1C98      	BTFSS      RCSTA, 1
0x0066	0x2869      	GOTO       L_UART1_Read2
;__Lib_UART_c67.c,26 :: 		
0x0067	0x1218      	BCF        RCSTA, 4
;__Lib_UART_c67.c,27 :: 		
0x0068	0x1618      	BSF        RCSTA, 4
;__Lib_UART_c67.c,28 :: 		
L_UART1_Read2:
;__Lib_UART_c67.c,29 :: 		
0x0069	0x0871      	MOVF       R1, 0
0x006A	0x00F0      	MOVWF      R0
;__Lib_UART_c67.c,30 :: 		
L_end_UART1_Read:
0x006B	0x0008      	RETURN
; end of _UART1_Read
_Bluetooth_Init:
;PathfinderSharpshooter.c,259 :: 		void Bluetooth_Init(const long baud_rate) {
;PathfinderSharpshooter.c,261 :: 		UART1_Init(9600);
0x006C	0x3033      	MOVLW      51
0x006D	0x1683      	BSF        STATUS, 5
0x006E	0x1303      	BCF        STATUS, 6
0x006F	0x0099      	MOVWF      SPBRG
0x0070	0x1518      	BSF        TXSTA, 2
0x0071	0x2030      	CALL       _UART1_Init
;PathfinderSharpshooter.c,262 :: 		mymsDelay(100);
0x0072	0x3064      	MOVLW      100
0x0073	0x00AF      	MOVWF      FARG_mymsDelay_ms
0x0074	0x3000      	MOVLW      0
0x0075	0x00B0      	MOVWF      FARG_mymsDelay_ms+1
0x0076	0x2023      	CALL       _mymsDelay
;PathfinderSharpshooter.c,264 :: 		}
L_end_Bluetooth_Init:
0x0077	0x0008      	RETURN
; end of _Bluetooth_Init
_initialization:
;PathfinderSharpshooter.c,218 :: 		void initialization(){
;PathfinderSharpshooter.c,221 :: 		TRISB = 0x15; //0001 0101
0x0078	0x3015      	MOVLW      21
0x0079	0x1683      	BSF        STATUS, 5
0x007A	0x1303      	BCF        STATUS, 6
0x007B	0x0086      	MOVWF      TRISB
;PathfinderSharpshooter.c,223 :: 		TRISD = 0x00;
0x007C	0x0188      	CLRF       TRISD
;PathfinderSharpshooter.c,225 :: 		TRISC = 0x88; //0b10001000;
0x007D	0x3088      	MOVLW      136
0x007E	0x0087      	MOVWF      TRISC
;PathfinderSharpshooter.c,227 :: 		PORTB = 0X00;
0x007F	0x1283      	BCF        STATUS, 5
0x0080	0x0186      	CLRF       PORTB
;PathfinderSharpshooter.c,229 :: 		INTCON = 0XB0; //b'10110000';
0x0081	0x30B0      	MOVLW      176
0x0082	0x008B      	MOVWF      INTCON
;PathfinderSharpshooter.c,231 :: 		OPTION_REG = 0x87;// Use the internal clock with a 256 prescaler
0x0083	0x3087      	MOVLW      135
0x0084	0x1683      	BSF        STATUS, 5
0x0085	0x0081      	MOVWF      OPTION_REG
;PathfinderSharpshooter.c,238 :: 		TMR0 = 248; //will overflow after 8 counts (1ms)
0x0086	0x30F8      	MOVLW      248
0x0087	0x1283      	BCF        STATUS, 5
0x0088	0x0081      	MOVWF      TMR0
;PathfinderSharpshooter.c,240 :: 		}
L_end_initialization:
0x0089	0x0008      	RETURN
; end of _initialization
_moveRight:
;PathfinderSharpshooter.c,193 :: 		void moveRight(unsigned int speed1, unsigned int speed2) {
;PathfinderSharpshooter.c,194 :: 		CCPR1L = speed1;
0x008A	0x1283      	BCF        STATUS, 5
0x008B	0x1303      	BCF        STATUS, 6
0x008C	0x082B      	MOVF       FARG_moveRight_speed1, 0
0x008D	0x0095      	MOVWF      CCPR1L
;PathfinderSharpshooter.c,195 :: 		CCPR2L = speed2;
0x008E	0x082D      	MOVF       FARG_moveRight_speed2, 0
0x008F	0x009B      	MOVWF      CCPR2L
;PathfinderSharpshooter.c,196 :: 		PORTD = 0b00001001;
0x0090	0x3009      	MOVLW      9
0x0091	0x0088      	MOVWF      PORTD
;PathfinderSharpshooter.c,197 :: 		}
L_end_moveRight:
0x0092	0x0008      	RETURN
; end of _moveRight
_Park:
;PathfinderSharpshooter.c,205 :: 		void Park() {
;PathfinderSharpshooter.c,206 :: 		CCPR1L = 0;
0x0093	0x1283      	BCF        STATUS, 5
0x0094	0x1303      	BCF        STATUS, 6
0x0095	0x0195      	CLRF       CCPR1L
;PathfinderSharpshooter.c,207 :: 		CCPR2L = 0;
0x0096	0x019B      	CLRF       CCPR2L
;PathfinderSharpshooter.c,208 :: 		PORTD = 0b00000000;
0x0097	0x0188      	CLRF       PORTD
;PathfinderSharpshooter.c,209 :: 		}
L_end_Park:
0x0098	0x0008      	RETURN
; end of _Park
_moveForward:
;PathfinderSharpshooter.c,181 :: 		void moveForward(unsigned int speed1, unsigned int speed2) {
;PathfinderSharpshooter.c,182 :: 		CCPR1L = speed1;
0x0099	0x1283      	BCF        STATUS, 5
0x009A	0x1303      	BCF        STATUS, 6
0x009B	0x082B      	MOVF       FARG_moveForward_speed1, 0
0x009C	0x0095      	MOVWF      CCPR1L
;PathfinderSharpshooter.c,183 :: 		CCPR2L = speed2;
0x009D	0x082D      	MOVF       FARG_moveForward_speed2, 0
0x009E	0x009B      	MOVWF      CCPR2L
;PathfinderSharpshooter.c,184 :: 		PORTD = 0b00000101;
0x009F	0x3005      	MOVLW      5
0x00A0	0x0088      	MOVWF      PORTD
;PathfinderSharpshooter.c,185 :: 		}
L_end_moveForward:
0x00A1	0x0008      	RETURN
; end of _moveForward
_UART1_Data_Ready:
;__Lib_UART_c67.c,16 :: 		
;__Lib_UART_c67.c,17 :: 		
0x00A2	0x3000      	MOVLW      0
0x00A3	0x1283      	BCF        STATUS, 5
0x00A4	0x1303      	BCF        STATUS, 6
0x00A5	0x1A8C      	BTFSC      PIR1, 5
0x00A6	0x3001      	MOVLW      1
0x00A7	0x00F0      	MOVWF      R0
;__Lib_UART_c67.c,18 :: 		
L_end_UART1_Data_Ready:
0x00A8	0x0008      	RETURN
; end of _UART1_Data_Ready
_ATD_read:
;PathfinderSharpshooter.c,250 :: 		unsigned int ATD_read(void){
;PathfinderSharpshooter.c,252 :: 		ADCON0 = ADCON0 | 0x04; // GO
0x00A9	0x1283      	BCF        STATUS, 5
0x00AA	0x1303      	BCF        STATUS, 6
0x00AB	0x151F      	BSF        ADCON0, 2
;PathfinderSharpshooter.c,253 :: 		while(ADCON0 & 0x04);
L_ATD_read27:
0x00AC	0x1D1F      	BTFSS      ADCON0, 2
0x00AD	0x28AF      	GOTO       L_ATD_read28
0x00AE	0x28AC      	GOTO       L_ATD_read27
L_ATD_read28:
;PathfinderSharpshooter.c,254 :: 		return((ADRESH<<8) | ADRESL); //right justified
0x00AF	0x081E      	MOVF       ADRESH, 0
0x00B0	0x00F1      	MOVWF      R0+1
0x00B1	0x01F0      	CLRF       R0
0x00B2	0x1683      	BSF        STATUS, 5
0x00B3	0x081E      	MOVF       ADRESL, 0
0x00B4	0x04F0      	IORWF      R0, 1
0x00B5	0x3000      	MOVLW      0
0x00B6	0x04F1      	IORWF      R0+1, 1
;PathfinderSharpshooter.c,257 :: 		}
L_end_ATD_read:
0x00B7	0x0008      	RETURN
; end of _ATD_read
_moveBackward:
;PathfinderSharpshooter.c,187 :: 		void moveBackward(unsigned int speed1, unsigned int speed2) {
;PathfinderSharpshooter.c,188 :: 		CCPR1L = speed1;
0x00B8	0x1283      	BCF        STATUS, 5
0x00B9	0x1303      	BCF        STATUS, 6
0x00BA	0x082B      	MOVF       FARG_moveBackward_speed1, 0
0x00BB	0x0095      	MOVWF      CCPR1L
;PathfinderSharpshooter.c,189 :: 		CCPR2L = speed2;
0x00BC	0x082D      	MOVF       FARG_moveBackward_speed2, 0
0x00BD	0x009B      	MOVWF      CCPR2L
;PathfinderSharpshooter.c,190 :: 		PORTD = 0b00001010;
0x00BE	0x300A      	MOVLW      10
0x00BF	0x0088      	MOVWF      PORTD
;PathfinderSharpshooter.c,191 :: 		}
L_end_moveBackward:
0x00C0	0x0008      	RETURN
; end of _moveBackward
_main:
;PathfinderSharpshooter.c,34 :: 		void main()
;PathfinderSharpshooter.c,37 :: 		k = 0;  //loop counter
0x00C1	0x1283      	BCF        STATUS, 5
0x00C2	0x1303      	BCF        STATUS, 6
0x00C3	0x01A8      	CLRF       _k
;PathfinderSharpshooter.c,39 :: 		serial = 0;
0x00C4	0x01A1      	CLRF       _serial
;PathfinderSharpshooter.c,43 :: 		initialization();
0x00C5	0x2078      	CALL       _initialization
;PathfinderSharpshooter.c,44 :: 		ATD_init();
0x00C6	0x2040      	CALL       _ATD_init
;PathfinderSharpshooter.c,45 :: 		PWM_Init();
0x00C7	0x2049      	CALL       _PWM_Init
;PathfinderSharpshooter.c,46 :: 		Bluetooth_Init(9600);
0x00C8	0x3080      	MOVLW      128
0x00C9	0x00AB      	MOVWF      FARG_Bluetooth_Init_baud_rate
0x00CA	0x3025      	MOVLW      37
0x00CB	0x00AC      	MOVWF      FARG_Bluetooth_Init_baud_rate+1
0x00CC	0x01AD      	CLRF       FARG_Bluetooth_Init_baud_rate+2
0x00CD	0x01AE      	CLRF       FARG_Bluetooth_Init_baud_rate+3
0x00CE	0x206C      	CALL       _Bluetooth_Init
;PathfinderSharpshooter.c,49 :: 		while(1)
L_main0:
;PathfinderSharpshooter.c,51 :: 		received_data = UART1_Read();
0x00CF	0x2061      	CALL       _UART1_Read
0x00D0	0x0870      	MOVF       R0, 0
0x00D1	0x00A2      	MOVWF      _received_data
;PathfinderSharpshooter.c,52 :: 		if (UART1_Data_Ready()) Serial = 1;
0x00D2	0x20A2      	CALL       _UART1_Data_Ready
0x00D3	0x0870      	MOVF       R0, 0
0x00D4	0x1903      	BTFSC      STATUS, 2
0x00D5	0x28D8      	GOTO       L_main2
0x00D6	0x3001      	MOVLW      1
0x00D7	0x00A1      	MOVWF      _serial
L_main2:
;PathfinderSharpshooter.c,53 :: 		if(received_data) Serial = 1;
0x00D8	0x0822      	MOVF       _received_data, 0
0x00D9	0x1903      	BTFSC      STATUS, 2
0x00DA	0x28DD      	GOTO       L_main3
0x00DB	0x3001      	MOVLW      1
0x00DC	0x00A1      	MOVWF      _serial
L_main3:
;PathfinderSharpshooter.c,55 :: 		while(Serial)
L_main4:
0x00DD	0x0821      	MOVF       _serial, 0
0x00DE	0x1903      	BTFSC      STATUS, 2
0x00DF	0x2944      	GOTO       L_main5
;PathfinderSharpshooter.c,57 :: 		if (UART1_Data_Ready()) {
0x00E0	0x20A2      	CALL       _UART1_Data_Ready
0x00E1	0x0870      	MOVF       R0, 0
0x00E2	0x1903      	BTFSC      STATUS, 2
0x00E3	0x2943      	GOTO       L_main6
;PathfinderSharpshooter.c,59 :: 		Park();
0x00E4	0x2093      	CALL       _Park
;PathfinderSharpshooter.c,60 :: 		received_data = UART1_Read();
0x00E5	0x2061      	CALL       _UART1_Read
0x00E6	0x0870      	MOVF       R0, 0
0x00E7	0x00A2      	MOVWF      _received_data
;PathfinderSharpshooter.c,63 :: 		switch (received_data) {
0x00E8	0x292F      	GOTO       L_main7
;PathfinderSharpshooter.c,65 :: 		case 'F':
L_main9:
;PathfinderSharpshooter.c,67 :: 		moveForward(120,120);
0x00E9	0x3078      	MOVLW      120
0x00EA	0x00AB      	MOVWF      FARG_moveForward_speed1
0x00EB	0x3000      	MOVLW      0
0x00EC	0x00AC      	MOVWF      FARG_moveForward_speed1+1
0x00ED	0x3078      	MOVLW      120
0x00EE	0x00AD      	MOVWF      FARG_moveForward_speed2
0x00EF	0x3000      	MOVLW      0
0x00F0	0x00AE      	MOVWF      FARG_moveForward_speed2+1
0x00F1	0x2099      	CALL       _moveForward
;PathfinderSharpshooter.c,70 :: 		break;
0x00F2	0x2943      	GOTO       L_main8
;PathfinderSharpshooter.c,72 :: 		case 'B':
L_main10:
;PathfinderSharpshooter.c,74 :: 		moveBackward(120,120);
0x00F3	0x3078      	MOVLW      120
0x00F4	0x00AB      	MOVWF      FARG_moveBackward_speed1
0x00F5	0x3000      	MOVLW      0
0x00F6	0x00AC      	MOVWF      FARG_moveBackward_speed1+1
0x00F7	0x3078      	MOVLW      120
0x00F8	0x00AD      	MOVWF      FARG_moveBackward_speed2
0x00F9	0x3000      	MOVLW      0
0x00FA	0x00AE      	MOVWF      FARG_moveBackward_speed2+1
0x00FB	0x20B8      	CALL       _moveBackward
;PathfinderSharpshooter.c,77 :: 		break;
0x00FC	0x2943      	GOTO       L_main8
;PathfinderSharpshooter.c,79 :: 		case 'R':
L_main11:
;PathfinderSharpshooter.c,81 :: 		moveleft(50,120);
0x00FD	0x3032      	MOVLW      50
0x00FE	0x00AB      	MOVWF      FARG_moveLeft_speed1
0x00FF	0x3000      	MOVLW      0
0x0100	0x00AC      	MOVWF      FARG_moveLeft_speed1+1
0x0101	0x3078      	MOVLW      120
0x0102	0x00AD      	MOVWF      FARG_moveLeft_speed2
0x0103	0x3000      	MOVLW      0
0x0104	0x00AE      	MOVWF      FARG_moveLeft_speed2+1
0x0105	0x2058      	CALL       _moveLeft
;PathfinderSharpshooter.c,84 :: 		break;
0x0106	0x2943      	GOTO       L_main8
;PathfinderSharpshooter.c,86 :: 		case 'L':
L_main12:
;PathfinderSharpshooter.c,88 :: 		moveRight(120,50);
0x0107	0x3078      	MOVLW      120
0x0108	0x00AB      	MOVWF      FARG_moveRight_speed1
0x0109	0x3000      	MOVLW      0
0x010A	0x00AC      	MOVWF      FARG_moveRight_speed1+1
0x010B	0x3032      	MOVLW      50
0x010C	0x00AD      	MOVWF      FARG_moveRight_speed2
0x010D	0x3000      	MOVLW      0
0x010E	0x00AE      	MOVWF      FARG_moveRight_speed2+1
0x010F	0x208A      	CALL       _moveRight
;PathfinderSharpshooter.c,91 :: 		break;
0x0110	0x2943      	GOTO       L_main8
;PathfinderSharpshooter.c,93 :: 		case 'W':    //SHOOT
L_main13:
;PathfinderSharpshooter.c,95 :: 		mymsDelay(100);  //wait before detecting abject
0x0111	0x3064      	MOVLW      100
0x0112	0x00AF      	MOVWF      FARG_mymsDelay_ms
0x0113	0x3000      	MOVLW      0
0x0114	0x00B0      	MOVWF      FARG_mymsDelay_ms+1
0x0115	0x2023      	CALL       _mymsDelay
;PathfinderSharpshooter.c,96 :: 		myreading = ATD_read();
0x0116	0x20A9      	CALL       _ATD_read
0x0117	0x0870      	MOVF       R0, 0
0x0118	0x1283      	BCF        STATUS, 5
0x0119	0x00A3      	MOVWF      _myreading
0x011A	0x0871      	MOVF       R0+1, 0
0x011B	0x00A4      	MOVWF      _myreading+1
;PathfinderSharpshooter.c,97 :: 		mymsDelay(100);
0x011C	0x3064      	MOVLW      100
0x011D	0x00AF      	MOVWF      FARG_mymsDelay_ms
0x011E	0x3000      	MOVLW      0
0x011F	0x00B0      	MOVWF      FARG_mymsDelay_ms+1
0x0120	0x2023      	CALL       _mymsDelay
;PathfinderSharpshooter.c,99 :: 		mymsDelay(500);  //wait before shooting
0x0121	0x30F4      	MOVLW      244
0x0122	0x00AF      	MOVWF      FARG_mymsDelay_ms
0x0123	0x3001      	MOVLW      1
0x0124	0x00B0      	MOVWF      FARG_mymsDelay_ms+1
0x0125	0x2023      	CALL       _mymsDelay
;PathfinderSharpshooter.c,100 :: 		PORTB = PORTB | 0X02; //PIC2 is connected to RB1
0x0126	0x1486      	BSF        PORTB, 1
;PathfinderSharpshooter.c,101 :: 		mymsDelay(500);
0x0127	0x30F4      	MOVLW      244
0x0128	0x00AF      	MOVWF      FARG_mymsDelay_ms
0x0129	0x3001      	MOVLW      1
0x012A	0x00B0      	MOVWF      FARG_mymsDelay_ms+1
0x012B	0x2023      	CALL       _mymsDelay
;PathfinderSharpshooter.c,102 :: 		PORTB = PORTB & 0XFD; //1111 1101
0x012C	0x30FD      	MOVLW      253
0x012D	0x0586      	ANDWF      PORTB, 1
;PathfinderSharpshooter.c,105 :: 		break;
0x012E	0x2943      	GOTO       L_main8
;PathfinderSharpshooter.c,108 :: 		}
L_main7:
0x012F	0x0822      	MOVF       _received_data, 0
0x0130	0x3A46      	XORLW      70
0x0131	0x1903      	BTFSC      STATUS, 2
0x0132	0x28E9      	GOTO       L_main9
0x0133	0x0822      	MOVF       _received_data, 0
0x0134	0x3A42      	XORLW      66
0x0135	0x1903      	BTFSC      STATUS, 2
0x0136	0x28F3      	GOTO       L_main10
0x0137	0x0822      	MOVF       _received_data, 0
0x0138	0x3A52      	XORLW      82
0x0139	0x1903      	BTFSC      STATUS, 2
0x013A	0x28FD      	GOTO       L_main11
0x013B	0x0822      	MOVF       _received_data, 0
0x013C	0x3A4C      	XORLW      76
0x013D	0x1903      	BTFSC      STATUS, 2
0x013E	0x2907      	GOTO       L_main12
0x013F	0x0822      	MOVF       _received_data, 0
0x0140	0x3A57      	XORLW      87
0x0141	0x1903      	BTFSC      STATUS, 2
0x0142	0x2911      	GOTO       L_main13
L_main8:
;PathfinderSharpshooter.c,109 :: 		}
L_main6:
;PathfinderSharpshooter.c,111 :: 		}
0x0143	0x28DD      	GOTO       L_main4
L_main5:
;PathfinderSharpshooter.c,113 :: 		while(!(Serial))
L_main14:
0x0144	0x0821      	MOVF       _serial, 0
0x0145	0x1D03      	BTFSS      STATUS, 2
0x0146	0x2971      	GOTO       L_main15
;PathfinderSharpshooter.c,115 :: 		moveForward(120,120);
0x0147	0x3078      	MOVLW      120
0x0148	0x00AB      	MOVWF      FARG_moveForward_speed1
0x0149	0x3000      	MOVLW      0
0x014A	0x00AC      	MOVWF      FARG_moveForward_speed1+1
0x014B	0x3078      	MOVLW      120
0x014C	0x00AD      	MOVWF      FARG_moveForward_speed2
0x014D	0x3000      	MOVLW      0
0x014E	0x00AE      	MOVWF      FARG_moveForward_speed2+1
0x014F	0x2099      	CALL       _moveForward
;PathfinderSharpshooter.c,117 :: 		while(!(PORTB & 0X04)) // IR-RB2 (left) is reading  white
L_main16:
0x0150	0x1906      	BTFSC      PORTB, 2
0x0151	0x2960      	GOTO       L_main17
;PathfinderSharpshooter.c,120 :: 		moveRight(120,50);
0x0152	0x3078      	MOVLW      120
0x0153	0x00AB      	MOVWF      FARG_moveRight_speed1
0x0154	0x3000      	MOVLW      0
0x0155	0x00AC      	MOVWF      FARG_moveRight_speed1+1
0x0156	0x3032      	MOVLW      50
0x0157	0x00AD      	MOVWF      FARG_moveRight_speed2
0x0158	0x3000      	MOVLW      0
0x0159	0x00AE      	MOVWF      FARG_moveRight_speed2+1
0x015A	0x208A      	CALL       _moveRight
;PathfinderSharpshooter.c,121 :: 		if(Serial) break;
0x015B	0x0821      	MOVF       _serial, 0
0x015C	0x1903      	BTFSC      STATUS, 2
0x015D	0x295F      	GOTO       L_main18
0x015E	0x2960      	GOTO       L_main17
L_main18:
;PathfinderSharpshooter.c,127 :: 		}
0x015F	0x2950      	GOTO       L_main16
L_main17:
;PathfinderSharpshooter.c,128 :: 		while(!(PORTB & 0X10)) // IR-RB4 (right) is reading  white
L_main19:
0x0160	0x1A06      	BTFSC      PORTB, 4
0x0161	0x2970      	GOTO       L_main20
;PathfinderSharpshooter.c,131 :: 		moveLeft(50,120);
0x0162	0x3032      	MOVLW      50
0x0163	0x00AB      	MOVWF      FARG_moveLeft_speed1
0x0164	0x3000      	MOVLW      0
0x0165	0x00AC      	MOVWF      FARG_moveLeft_speed1+1
0x0166	0x3078      	MOVLW      120
0x0167	0x00AD      	MOVWF      FARG_moveLeft_speed2
0x0168	0x3000      	MOVLW      0
0x0169	0x00AE      	MOVWF      FARG_moveLeft_speed2+1
0x016A	0x2058      	CALL       _moveLeft
;PathfinderSharpshooter.c,132 :: 		if(Serial) break;
0x016B	0x0821      	MOVF       _serial, 0
0x016C	0x1903      	BTFSC      STATUS, 2
0x016D	0x296F      	GOTO       L_main21
0x016E	0x2970      	GOTO       L_main20
L_main21:
;PathfinderSharpshooter.c,134 :: 		}
0x016F	0x2960      	GOTO       L_main19
L_main20:
;PathfinderSharpshooter.c,135 :: 		}
0x0170	0x2944      	GOTO       L_main14
L_main15:
;PathfinderSharpshooter.c,138 :: 		}
0x0171	0x28CF      	GOTO       L_main0
;PathfinderSharpshooter.c,139 :: 		}
L_end_main:
0x0172	0x2972      	GOTO       $+0
; end of _main
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x0004      [31]    _interrupt
0x0023      [13]    _mymsDelay
0x0030      [16]    _UART1_Init
0x0040       [9]    _ATD_init
0x0049      [15]    _PWM_Init
0x0058       [9]    _moveLeft
0x0061      [11]    _UART1_Read
0x006C      [12]    _Bluetooth_Init
0x0078      [18]    _initialization
0x008A       [9]    _moveRight
0x0093       [6]    _Park
0x0099       [9]    _moveForward
0x00A2       [7]    _UART1_Data_Ready
0x00A9      [15]    _ATD_read
0x00B8       [9]    _moveBackward
0x00C1     [178]    _main
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x0000       [1]    INDF
0x0001       [1]    TMR0
0x0003       [1]    STATUS
0x0004       [1]    FSR
0x0006       [1]    PORTB
0x0008       [1]    PORTD
0x000A       [1]    PCLATH
0x000B       [1]    INTCON
0x000C       [1]    PIR1
0x0011       [1]    TMR2
0x0012       [1]    T2CON
0x0015       [1]    CCPR1L
0x0017       [1]    CCP1CON
0x0018       [1]    RCSTA
0x001A       [1]    RCREG
0x001B       [1]    CCPR2L
0x001D       [1]    CCP2CON
0x001E       [1]    ADRESH
0x001F       [1]    ADCON0
0x0021       [1]    _serial
0x0022       [1]    _received_data
0x0023       [2]    _myreading
0x0025       [2]    ___DoICPAddr
0x0027       [1]    _tick
0x0028       [1]    _k
0x0029       [1]    ___saveSTATUS
0x002A       [1]    ___savePCLATH
0x002B       [2]    FARG_moveBackward_speed1
0x002B       [2]    FARG_moveForward_speed1
0x002B       [4]    FARG_Bluetooth_Init_baud_rate
0x002B       [2]    FARG_moveRight_speed1
0x002B       [2]    FARG_moveLeft_speed1
0x002D       [2]    FARG_moveRight_speed2
0x002D       [2]    FARG_moveBackward_speed2
0x002D       [2]    FARG_moveLeft_speed2
0x002D       [2]    FARG_moveForward_speed2
0x002F       [2]    FARG_mymsDelay_ms
0x0070       [1]    R0
0x0071       [1]    R1
0x0072       [1]    R2
0x0073       [1]    R3
0x0074       [1]    R4
0x0075       [1]    R5
0x0076       [1]    R6
0x0077       [1]    R7
0x0078       [1]    R8
0x0079       [1]    R9
0x007A       [1]    R10
0x007B       [1]    R11
0x007C       [1]    R12
0x007D       [1]    R13
0x007E       [1]    R14
0x007F       [1]    R15
0x0081       [1]    OPTION_REG
0x0085       [1]    TRISA
0x0086       [1]    TRISB
0x0087       [0]    TRISC6_bit
0x0087       [1]    TRISC
0x0087       [0]    TRISC7_bit
0x0088       [1]    TRISD
0x0092       [1]    PR2
0x0098       [1]    TXSTA
0x0099       [1]    SPBRG
0x009E       [1]    ADRESL
0x009F       [1]    ADCON1
