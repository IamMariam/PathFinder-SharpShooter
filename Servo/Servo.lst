;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 5/26/2024 12:45:27 PM
;----------------------------------------------

;Address Opcode 	ASM
0x0000	0x2831      	GOTO       49
_interrupt:
0x0004	0x00FF      	MOVWF      R15
0x0005	0x0E03      	SWAPF      STATUS, 0
0x0006	0x0183      	CLRF       STATUS
0x0007	0x00A4      	MOVWF      ___saveSTATUS
0x0008	0x080A      	MOVF       PCLATH, 0
0x0009	0x00A5      	MOVWF      ___savePCLATH
0x000A	0x018A      	CLRF       PCLATH
0x000B	0x0870      	MOVF       R0, 0
0x000C	0x00A0      	MOVWF      32
;Servo.c,4 :: 		void interrupt(void){
;Servo.c,6 :: 		if(PIR1&0x04){//CCP1 interrupt
0x000D	0x1D0C      	BTFSS      PIR1, 2
0x000E	0x2828      	GOTO       L_interrupt0
;Servo.c,8 :: 		if(HL){ //high
0x000F	0x0823      	MOVF       _HL, 0
0x0010	0x1903      	BTFSC      STATUS, 2
0x0011	0x281C      	GOTO       L_interrupt1
;Servo.c,11 :: 		CCPR1H = 3500 >> 8; // Set compare value for the 1.75ms pulse width
0x0012	0x300D      	MOVLW      13
0x0013	0x0096      	MOVWF      CCPR1H
;Servo.c,12 :: 		CCPR1L = 3500;
0x0014	0x30AC      	MOVLW      172
0x0015	0x0095      	MOVWF      CCPR1L
;Servo.c,14 :: 		HL=0;//next time low
0x0016	0x01A3      	CLRF       _HL
;Servo.c,15 :: 		CCP1CON=0x09;//next time Falling edge
0x0017	0x3009      	MOVLW      9
0x0018	0x0097      	MOVWF      CCP1CON
;Servo.c,16 :: 		TMR1H=0;
0x0019	0x018F      	CLRF       TMR1H
;Servo.c,17 :: 		TMR1L=0;
0x001A	0x018E      	CLRF       TMR1L
;Servo.c,18 :: 		}
0x001B	0x2826      	GOTO       L_interrupt2
L_interrupt1:
;Servo.c,22 :: 		CCPR1H = (40000 - 3500) >> 8; // Set compare value for the remainder of the 20ms period
0x001C	0x308E      	MOVLW      142
0x001D	0x0096      	MOVWF      CCPR1H
;Servo.c,23 :: 		CCPR1L = 40000 - 3500;
0x001E	0x3094      	MOVLW      148
0x001F	0x0095      	MOVWF      CCPR1L
;Servo.c,25 :: 		CCP1CON=0x08; //next time rising edge
0x0020	0x3008      	MOVLW      8
0x0021	0x0097      	MOVWF      CCP1CON
;Servo.c,26 :: 		HL=1; //next time High
0x0022	0x3001      	MOVLW      1
0x0023	0x00A3      	MOVWF      _HL
;Servo.c,27 :: 		TMR1H=0;
0x0024	0x018F      	CLRF       TMR1H
;Servo.c,28 :: 		TMR1L=0;
0x0025	0x018E      	CLRF       TMR1L
;Servo.c,30 :: 		}
L_interrupt2:
;Servo.c,32 :: 		PIR1=PIR1&0xFB;
0x0026	0x30FB      	MOVLW      251
0x0027	0x058C      	ANDWF      PIR1, 1
;Servo.c,34 :: 		}
L_interrupt0:
;Servo.c,36 :: 		}
L_end_interrupt:
L__interrupt7:
0x0028	0x0820      	MOVF       32, 0
0x0029	0x00F0      	MOVWF      R0
0x002A	0x0825      	MOVF       ___savePCLATH, 0
0x002B	0x008A      	MOVWF      PCLATH
0x002C	0x0E24      	SWAPF      ___saveSTATUS, 0
0x002D	0x0083      	MOVWF      STATUS
0x002E	0x0EFF      	SWAPF      R15, 1
0x002F	0x0E7F      	SWAPF      R15, 0
0x0030	0x0009      	RETFIE
; end of _interrupt
_main:
;Servo.c,38 :: 		void main() {
;Servo.c,41 :: 		trisB = 0X02; //Signal from PIC1
0x0031	0x3002      	MOVLW      2
0x0032	0x1683      	BSF        STATUS, 5
0x0033	0x1303      	BCF        STATUS, 6
0x0034	0x0086      	MOVWF      TRISB
;Servo.c,42 :: 		PORTB = 0x00;
0x0035	0x1283      	BCF        STATUS, 5
0x0036	0x0186      	CLRF       PORTB
;Servo.c,43 :: 		while(1){
L_main3:
;Servo.c,46 :: 		if (PORTB & 0x02) {//ordered to shoot
0x0037	0x1C86      	BTFSS      PORTB, 1
0x0038	0x284A      	GOTO       L_main5
;Servo.c,47 :: 		TRISC = 0; // servo on RC2
0x0039	0x1683      	BSF        STATUS, 5
0x003A	0x0187      	CLRF       TRISC
;Servo.c,48 :: 		TMR1H=0;
0x003B	0x1283      	BCF        STATUS, 5
0x003C	0x018F      	CLRF       TMR1H
;Servo.c,49 :: 		TMR1L=0;
0x003D	0x018E      	CLRF       TMR1L
;Servo.c,51 :: 		HL=1; //start high
0x003E	0x3001      	MOVLW      1
0x003F	0x00A3      	MOVWF      _HL
;Servo.c,52 :: 		CCP1CON=0x08;
0x0040	0x3008      	MOVLW      8
0x0041	0x0097      	MOVWF      CCP1CON
;Servo.c,54 :: 		OPTION_REG = 0x87;//Fosc/4 with 256 prescaler => incremetn every 0.5us*256=128us ==> overflow 8count*128us=1ms to overflow
0x0042	0x3087      	MOVLW      135
0x0043	0x1683      	BSF        STATUS, 5
0x0044	0x0081      	MOVWF      OPTION_REG
;Servo.c,56 :: 		T1CON=0x01;//TMR1 On Fosc/4 (inc 0.5uS) with 0 prescaler (TMR1 overflow after 0xFFFF counts ==65535)==> 32.767ms
0x0045	0x3001      	MOVLW      1
0x0046	0x1283      	BCF        STATUS, 5
0x0047	0x0090      	MOVWF      T1CON
;Servo.c,58 :: 		INTCON=0xF0;//enable TMR0 overflow, TMR1 overflow, External interrupts and peripheral interrupts;
0x0048	0x30F0      	MOVLW      240
0x0049	0x008B      	MOVWF      INTCON
;Servo.c,61 :: 		}
L_main5:
;Servo.c,63 :: 		}
0x004A	0x2837      	GOTO       L_main3
;Servo.c,65 :: 		}
L_end_main:
0x004B	0x284B      	GOTO       $+0
; end of _main
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x0004      [45]    _interrupt
0x0031      [27]    _main
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x0000       [1]    INDF
0x0003       [1]    STATUS
0x0004       [1]    FSR
0x0006       [1]    PORTB
0x000A       [1]    PCLATH
0x000B       [1]    INTCON
0x000C       [1]    PIR1
0x000E       [1]    TMR1L
0x000F       [1]    TMR1H
0x0010       [1]    T1CON
0x0015       [1]    CCPR1L
0x0016       [1]    CCPR1H
0x0017       [1]    CCP1CON
0x0021       [2]    ___DoICPAddr
0x0023       [1]    _HL
0x0024       [1]    ___saveSTATUS
0x0025       [1]    ___savePCLATH
0x0070       [1]    R0
0x0071       [1]    R1
0x0072       [1]    R2
0x0073       [1]    R3
0x0074       [1]    R4
0x0075       [1]    R5
0x0076       [1]    R6
0x0077       [1]    R7
0x0078       [1]    R8
0x0079       [1]    R9
0x007A       [1]    R10
0x007B       [1]    R11
0x007C       [1]    R12
0x007D       [1]    R13
0x007E       [1]    R14
0x007F       [1]    R15
0x0081       [1]    OPTION_REG
0x0086       [1]    TRISB
0x0087       [1]    TRISC
